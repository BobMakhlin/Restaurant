@page "/product/create"

@inject HttpClient HttpClient
@inject NavigationManager NavigationManager


@{
    if (IsPageLoaded())
    {
        <Form Product="@m_product" Categories="@m_categories" Ingredients="@m_ingredients" OnValidSubmit="@CreateProductAsync" />
    }
    else
    {
        <Loading />
    }

}


@code {
    private ProductPoco m_product;
    private List<CategoryPoco> m_categories;
    private List<IngredientPoco> m_ingredients;



    public async Task CreateProductAsync()
    {
        m_product.Category = null;

        await HttpClient.PostAsJsonAsync(Urls.BackApiProduct, m_product);


        NavigationManager.NavigateTo("product");
    }

    protected override async Task OnInitializedAsync()
    {
        m_product = new ProductPoco()
        {
            Ingredients = new List<IngredientPoco>()
        };

        m_categories = await HttpClient.GetFromJsonAsync<List<CategoryPoco>>
            ($"{Urls.BackApiCategory}");

        m_ingredients = await HttpClient.GetFromJsonAsync<List<IngredientPoco>>
            ($"{Urls.BackApiIngredient}");
    }

    private bool IsPageLoaded() =>
        m_product != null
        && m_categories != null
        && m_ingredients != null;
}
