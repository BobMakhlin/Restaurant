@inject HttpClient HttpClient
@inject IJSRuntime JSRuntime


<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Restaurant</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>

        <li class="nav-item px-3">
            <NavLink class="nav-link" href="product">
                <i class="fas fa-pizza-slice"></i>
                <span class="ml-3">Products</span>
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="category">
                <i class="fas fa-store"></i>
                <span class="ml-3">Categories</span>
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="ingredient">
                <i class="fas fa-pepper-hot"></i>
                <span class="ml-3">Ingredients</span>
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="status">
                <i class="fas fa-sign-out-alt"></i>
                <span class="ml-3">Status</span>
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="order">
                <i class="fas fa-sign-out-alt"></i>
                <span class="ml-3">Orders</span>
            </NavLink>
        </li>

        <li class="nav-item px-3">
            <button class="btn btn-secondary w-100 mt-5" @onclick="@Synchronize">Synchronize</button>
        </li>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Synchronize()
    {
        var products = await HttpClient.GetFromJsonAsync<List<ProductPoco>>(Urls.BackApiProduct);
        var categories = await HttpClient.GetFromJsonAsync<List<CategoryPoco>>(Urls.BackApiCategory);
        var ingredients = await HttpClient.GetFromJsonAsync<List<IngredientPoco>>(Urls.BackApiIngredient);

        var menu = new MenuPoco
        {
            Products = products,
            Categories = categories,
            Ingredients = ingredients
        };


        var response = await HttpClient.PostAsJsonAsync(Urls.FrontApiMenu, menu);

        if (response.IsSuccessStatusCode)
        {
            await JSRuntime.InvokeVoidAsync("alert", "Success!");
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("alert", "Something went wrong...");
        }
    }
}
