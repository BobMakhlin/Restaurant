<style>
    .product__img {
        display: block;
        margin: 0 auto;
    }

    .product__title {
        text-align: center;
        text-transform: uppercase;
        font-family: 'Pelmeshka', 'sans-serif';
    }

    .product__labels {
        text-align: center;
    }

    .product__badge {
        font-size: 1em;
        margin: 0;
    }

    .product-card {
        margin: 0 auto;
        width: 22em;
    }

    .product-card__bottom-line {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .product__weight {
        font-size: 1.15em;
        font-weight: bold;
    }
</style>


@page "/product/details/{id:int}"
@inject HttpClient httpClient
@inject CartHelper cartHelper



@if (Product == null)
{
    <Loading />
}
else
{
    var ingredientsNames = Product.Ingredients
        .Select(ingredient => ingredient.Title);

    var productContent = String.Join(", ", ingredientsNames);

    <div class="container">
        <div class="row product">

            <div class="col-4">
                <img class="img-fluid product__img" src="./img/products/@Product.Photo" />

                <div class="product__labels mt-2">
                    @foreach (var label in Product.Labels)
                    {
                        <div class="product__label mb-1">
                            <p class="product__badge badge badge-orange">@label.Title</p>
                        </div>
                    }
                </div>
            </div>
            <div class="col-8">
                <h2 class="product__title">@Product.Title</h2>

                <div class="product-card card mt-4">
                    <div class="card-body">
                        <h5 class="card-title">@Product.Price.ToString("#.##") ₴</h5>
                        <hr />

                        <p class="card-text">@productContent</p>
                        
                        <div class="product-card__bottom-line">
                            <button type="button" class="btn btn-orange text-uppercase" @onclick="@(() => cartHelper.AddProductToCart(Product.Id))">В корзину</button>
                            
                            <span class="product__weight">@Product.Weight.ToString("#.##") г</span>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }
    private ProductPoco Product { get; set; } = null;

    protected override async Task OnInitializedAsync()
    {
        var url = $"{Urls.FrontApiProduct}/{Id}";
        Product = await httpClient.GetFromJsonAsync<ProductPoco>(url);
    }
}
